

- A `datelist_int` generation query. Convert the `device_activity_datelist` column into a `datelist_int` column




WITH users AS (
	SELECT *
	FROM deviceact_cumulated 
	WHERE date = '2023-01-03'::date
),
series AS (
	SELECT series_date
	FROM generate_series(
		'2023-01-01'::date,
		'2023-01-31'::date,
		'1 day'::interval
	) AS series(series_date)
)
--checks if series_date is in dates_active 
, placeholderint AS (
	SELECT 
/*It checks if the user was active on that day (dates_active contains that date).
If yes, it creates a number that has one bit turned on in a 32-bit number. 
Which bit is turned on depends on how far that day is from the user's main date.
If no, it returns zero (no bits turned on).
Then, it turns this number into a 32-bit binary string (a sequence of 0s and 1s)*/
	CAST(CASE WHEN 
		dates_active @> ARRAY[series_date::date]
		THEN CAST(POW(2,32-(date-DATE(series_date::date))) AS BIGINT)
		ELSE 0 
		END AS BIT(32)) AS placeholder_int_value,
	*
	FROM users
	CROSS JOIN series)




--integers are easier to compress
SELECT user_id,device_id, SUM(CAST(placeholder_int_value AS BIGINT))  AS datelist_int
FROM 
placeholderint
GROUP BY user_id,device_id
